library.list <- c("ggplot2", "forecast", "tseries", "urca")
for (i in 1:length(library.list)) {
  if (!library.list[i] %in% rownames(installed.packages())) {
    install.packages(library.list[i])
  }
  library(library.list[i], character.only = TRUE)
}
rm(library.list)

#Note data ends short in 2014 compared to interest rate records
data <- read.csv(file.choose())

#GDP Predictions

#Assume a Cobb-Douglas Production Function with beta = (1/3)
#Utilize growth accounting method.

tfp <- data$ga
gk <- data$gk
gl <- data$gl
a<- (1/3)

gy <- tfp + a*gk + (1-a)*gl

gy<- ts(gy, start = 1962)
autoplot(gy)

#predict these
tfp <- ts(tfp, start = 1962) #excluding food and energy
gk <- ts(gk, start = 1962)
gl<- ts(gl, start = 1962)

autoplot(tfp) +
  ggtitle("Total Factor Productivity: Rate of Growth") +
  xlab("Year") + ylab("Rate")

autoplot(gk) + 
  ggtitle("Capital Stock: Rate of Growth") +
  xlab("Year") + ylab("Rate")

autoplot(gl) +
  ggtitle("Labor Force: Rate of Growth") + 
  xlab("Year") + ylab("Rate")

#=======================================================================
#ETS Forecast
#=======================================================================
ets(tfp)
ets(gk)
ets(gl)

tfp %>% ets() %>% forecast(h=9) %>% autoplot()
gk %>% ets() %>% forecast(h=9) %>% autoplot()
gl %>% ets() %>% forecast(h=9) %>% autoplot()

checkresiduals(ets(tfp))
checkresiduals(ets(gk))
checkresiduals(ets(gl))


#========================================================================
#ARIMA Forecast
#========================================================================
ggtsdisplay(tfp)  #Differenced twice
Box.test(tfp, lag=10, type="Ljung-Box")

ggtsdisplay(diff(gk))
Box.test(diff(gk), lag=10, type="Ljung-Box")

ggtsdisplay(diff(gl))
Box.test(diff(gl), lag=10, type="Ljung-Box")

tfp %>% ur.kpss() %>% summary()
gk %>% ur.kpss() %>% summary()
gl %>% ur.kpss()%>% summary()

tfp %>% ur.kpss() %>% summary() 
gk %>% diff() %>% ur.kpss() %>% summary() #Differenced
gl %>% diff() %>% diff() %>% ur.kpss() %>% summary() #Differenced 

tfpArima <- auto.arima(tfp, seasonal = FALSE)
autoplot(tfpArima) #No Roots within unit circle, assumptions aren't held. 
gkArima <- auto.arima(gk, seasonal = FALSE)
autoplot(gkArima)
glArima <- auto.arima(gl, seasonal = FALSE)
autoplot(glArima)

tfpArima %>% forecast(h=9) %>% autoplot(include=80) +
  xlab("Year") + ylab("TFP Growth")

gkArima %>% forecast(h=9) %>% autoplot(include=80) +
  xlab("Year") + ylab("Capital Stock Growth")

glArima %>% forecast(h=9) %>% autoplot(include=80) +
  xlab("Year") + ylab("Labor Force Growth")

checkresiduals(tfpArima)
checkresiduals(gkArima)
checkresiduals(glpArima)
#========================================================================
#Compare Models
#========================================================================

fETS <- function(x, h) {
  forecast(ets(x), h = h)
}

fARIMA <- function(x, h) {
  forecast(auto.arima(x), h=h)
}

#ETS CV
tfpe1 <- tsCV(tfp, fETS, h=1)
gke1 <- tsCV(gk, fETS, h=1)
gle1 <- tsCV(gl, fETS, h=1)

#Arima CV
tfpe2 <- tsCV(tfp, fARIMA, h=1)
gke2 <- tsCV(gk, fARIMA, h=1)
gle2 <- tsCV(gl, fARIMA, h=1)


#ETS MSE
mean(tfpe1^2, na.rm=TRUE)
mean(gke1^2, na.rm=TRUE)
mean(gle1^2, na.rm=TRUE)

#ARIMA MSE
mean(tfpe2^2, na.rm=TRUE)
mean(gke2^2, na.rm=TRUE)
mean(gle2^2, na.rm=TRUE)
#ETS is showing lower cross validated errors. 
#Use ETS Model for GDP Variables

forecastTfp <- forecast(ets(tfp), h=5)
forecastGk <- forecast(ets(gk), h=5)
forecastGl <- forecast(ets(gl), h=5)

forecastGY <- forecastTfp$mean + a*forecastGk$mean + (1-a)*forecastGl$mean
#We want nominal Growth

inf <- data$cpipct
inf <- ts(inf, start = 1962)

forecastInf <- forecast(ets(inf), h=5)
checkresiduals(ets(inf))

#Years don't match for output growth/inflation growth, this shouldn't concern us. We want forecasts for most recent records
nomGrowth <- forecastInf$mean + forecastGY[1] #Because we forecast constant growth

pastG <- ts(data$gdppct, start = 1962)

autoplot(pastG) + 
  autolayer(tenyr) + 
  autolayer(nomGrowth) +
  autolayer(f1) +
  ggtitle("Growth - Ten Year: Spread") +
  xlab("Year") + ylab("Rate")

autoplot(pastG) + 
  autolayer(oneyr) + 
  autolayer(nomGrowth) +
  autolayer(f2) +
  ggtitle("Growth - One Year: Spread") +
  xlab("Year") + ylab("Rate")

#Reframe 
spread_10_past <- pastG - tenyr
spread_10_forecast <- nomGrowth - f1

spread_1_past <- pastG - oneyr
spread_1_forecast <- nomGrowth - f2

#Plot Spread

#10 Year Spread
autoplot(spread_10_past) + 
  autolayer(spread_10_forecast)

#1 Year Spread
autoplot(spread_1_past) +
  autolayer(spread_1_forecast)





